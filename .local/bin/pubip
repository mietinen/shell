#!/usr/bin/env bash

# HTTP hosts to use +drill
hosts="drill
icanhazip.com
ip.tyk.nu
ipof.in/txt
ident.me
l2.io/ip
eth0.me
whatismyip.akamai.com
ifconfig.me
ipecho.net/plain
wgetip.com
bot.whatismyipaddress.com"

# Cache file
cachefile="${XDG_CACHE_HOME:-$HOME/.cache}/pubip_history"
[ -f "$cachefile" ] || touch "$cachefile"

# Get public IP address
pub_update() {
    for h in $(echo "$hosts" | shuf); do
        case "$h" in
            drill) pubip="$(drill myip.opendns.com @resolver1.opendns.com 2>/dev/null | awk '/^myip\./ && $3 == "IN" {print $5}')" ;;
            *) pubip="$(curl -s -4 --connect-timeout 5 "$h" 2>/dev/null)" ;;
        esac
        # ipv4: ^([0-9]{1,3}\.){3}[0-9]{1,3}$
        # ipv6: ^([0-9a-f]{0,4}:){1,7}[0-9a-f]{1,4}$
        # both: ^(([0-9a-f]{0,4}:){1,7}[0-9a-f]{1,4}|([0-9]{1,3}\.){3}[0-9]{1,3})$
        if [ "$(echo "$pubip" | grep -Ec '^([0-9]{1,3}\.){3}[0-9]{1,3}$')" -eq 1 ]; then
            # Log public IP if changed
            tail -n 1 "$cachefile" | grep -q "$pubip" || echo "$pubip $(date +%F-%R)" >> "$cachefile"
            break
        fi
    done
}

# Return last IP only
pub_last() {
    tail -n 1 "$cachefile" 2>/dev/null | cut -d' ' -f1
}

# Print table with 10 last ip adresses
pub_print() {
    echo "Last public IP addresses:"
    echo
    tail "$cachefile" | column -t -o "    " -N IP,Time
    echo
    echo "Current public IP address: $(pub_last)"
    pub_update &
}

case "$1" in
    "-update") pub_update ;;
    "-last") pub_last ;;
    *) pub_print
esac

# vim: set ts=4 sw=4 tw=0 et :
